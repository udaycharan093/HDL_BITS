/* Problem Statement
We're going to start with a small bit of HDL to get familiar with the interface used by HDLBits. Here's the description of the circuit you need to build for this exercise:

Build a circuit with no inputs and one output. That output should always drive 1 (or logic high).*/


module top_module( output one );
	
	assign one = 1'b1;
	
endmodule





// SECOND PRBLM 
Build a circuit with no inputs and one output that outputs a constant 0

Now that you've worked through the previous problem, let's see if you can do a simple problem without the hints.

HDLBits uses Verilog-2001 ANSI-style port declaration syntax because it's easier to read and reduces typos. You may use the older Verilog-1995 syntax if you wish. For example, the two module declarations below are acceptable and equivalent:
module top_module ( zero );
    output zero;
    // Verilog-1995
endmodule
module top_module ( output zero ); 

    // Verilog-2001
endmodule



module top_module(
    output zero
);// Module body starts after semicolon

endmodule
